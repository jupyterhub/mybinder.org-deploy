projectName: staging

# binderhubEnabled: false

binderhub:
  config:
    BinderHub:
      pod_quota: 20
      hub_url: https://hub.ovh.staging.mybinder.2i2c.cloud
      badge_base_url: https://staging.mybinder.2i2c.cloud
      image_prefix: 985ed7pp.c1.va1.container-registry.ovh.us/mybinder-builds/
      sticky_builds: true

  extraVolumes:
    - name: secrets
      secret:
        secretName: events-archiver-secrets
  extraVolumeMounts:
    - name: secrets
      mountPath: /secrets
      readOnly: true
  extraEnv:
    GOOGLE_APPLICATION_CREDENTIALS: /secrets/service-account.json
    EVENT_LOG_NAME: "binderhub-staging-events-text"

  resources:
    requests:
      cpu: 0.1
      memory: 512Mi

  dind:
    resources:
      requests:
        cpu: "0"
        memory: 1Gi
      limits:
        cpu: "1"
        memory: 1Gi

  ingress:
    hosts:
      - ovh.staging.mybinder.2i2c.cloud

  jupyterhub:
    hub:
      resources:
        requests:
          memory: 100M
          cpu: "10m"
    singleuser:
      memory:
        guarantee: 100M
        limit: 256M
      cpu:
        guarantee: .01
        limit: 0.5
    ingress:
      hosts:
        - hub.ovh.staging.mybinder.2i2c.cloud
      tls:
        - secretName: kubelego-tls-jupyterhub-staging
          hosts:
            - hub.ovh.staging.mybinder.2i2c.cloud
    scheduling:
      userPlaceholder:
        replicas: 1

    proxy:
      chp:
        resources:
          requests:
            memory: 100M
            cpu: 10m

minesweeper:
  resources:
    requests:
      cpu: 5m
      memory: 100Mi

grafana:
  ingress:
    hosts:
      - grafana.ovh.staging.mybinder.2i2c.cloud
    tls:
      - hosts:
          - grafana.ovh.staging.mybinder.2i2c.cloud
        secretName: kubelego-tls-grafana
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: prometheus
          orgId: 1
          type: prometheus
          url: https://prometheus.ovh.staging.mybinder.2i2c.cloud
          isDefault: true
          editable: false
  persistence:
    storageClassName: standard

prometheus:
  server:
    ingress:
      hosts:
        - prometheus.ovh.staging.mybinder.2i2c.cloud
      tls:
        - hosts:
            - prometheus.ovh.staging.mybinder.2i2c.cloud
          secretName: kubelego-tls-prometheus
    persistentVolume:
      size: 12G
    # reduce retention for staging
    retention: 30d

ingress-nginx:
  controller:
    replicaCount: 2
    # service:
    #   loadBalancerIP: 35.222.35.25
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        cpu: 500m
        memory: 500Mi

static:
  ingress:
    hosts:
      - static.ovh.staging.mybinder.2i2c.cloud

redirector:
  enabled: true
  redirects:
    - type: host
      host:
        from: docs.staging.mybinder.2i2c.cloud
        to: mybinder.readthedocs.io

matomo:
  enabled: true
  db:
    instanceName: binderhub-288415:us-central1:matomo-staging
  trustedHosts:
    - staging.mybinder.2i2c.cloud
  ingress:
    hosts:
      - staging.mybinder.2i2c.cloud

analyticsPublisher:
  # FIXME: Enable this
  enabled: false
  project: binderhub-288415
  destinationBucket: binder-staging-events-archive
  events:
    logName: binderhub-staging-events-text
    sourceBucket: binder-staging-events-raw-export
  resources:
    requests:
      cpu: 10m
  # TODO: copy to values
  cloudCosts:
    sourceBucket: binder-billing-archive

gcsProxy:
  # FIXME: Enable this
  enabled: false
  buckets:
    - name: binder-staging-events-archive
      host: archive.analytics.gke2.staging.mybinder.2i2c.cloud
    - name: binder-staging-events-archive
      host: archive.analytics.staging.mybinder.2i2c.cloud

federationRedirect:
  host: staging.mybinder.2i2c.cloud
  enabled: true
  resources:
    requests:
      cpu: 10m
      memory: 100Mi
    limits:
      cpu: 0.2
      memory: 200Mi
  hosts:
    gke:
      prime: true
      url: https://ovh.staging.mybinder.2i2c.cloud
      weight: 100
      health: https://ovh.staging.mybinder.2i2c.cloud/health
      versions: https://ovh.staging.mybinder.2i2c.cloud/versions
