projectName: binder-staging

tags:
  kubelego: false
  certmanager: true

binderhub:
  config:
    BinderHub:
      pod_quota: 0
      hub_url: https://hub.gke.staging.mybinder.org
      badge_base_url: https://staging.mybinder.org
      image_prefix: gcr.io/binder-staging/r2d-72d7634-
      sticky_builds: true

  ingress:
    hosts:
      - gke.staging.mybinder.org
      - gke2.staging.mybinder.org
    annotations:
      kubernetes.io/tls-acme: "true"
    tls:
      - secretName: cert-manager-binder-tls
        hosts:
          - gke.staging.mybinder.org
          - gke2.staging.mybinder.org

  jupyterhub:
    singleuser:
      memory:
        guarantee: 256M
        limit: 256M
      cpu:
        guarantee: 0.1
        limit: 0.5
    ingress:
      hosts:
        - hub.gke.staging.mybinder.org
      annotations:
        kubernetes.io/tls-acme: "true"
      tls:
        - secretName: cert-manager-jupyterhub-tls
          hosts:
            - hub.gke.staging.mybinder.org
    scheduling:
      userPlaceholder:
        replicas: 2

grafana:
  ingress:
    hosts:
      - grafana.staging.mybinder.org
    annotations:
      kubernetes.io/tls-acme: "true"
    tls:
      - hosts:
          - grafana.staging.mybinder.org
        secretName: cert-manager-grafana-tls
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: prometheus
          orgId: 1
          type: prometheus
          url: https://prometheus.staging.mybinder.org
          access: direct
          isDefault: true
          editable: false

prometheus:
  server:
    ingress:
      hosts:
        - prometheus.staging.mybinder.org
      annotations:
        kubernetes.io/tls-acme: "true"
      tls:
        - secretName: cert-manager-prometheus-tls
          hosts:
            - prometheus.staging.mybinder.org

nginx-ingress:
  controller:
    service:
      loadBalancerIP: 104.197.11.66

static:
  ingress:
    hosts:
      - static.staging.mybinder.org

redirector:
  redirects:
    - type: host
      host:
        from: beta.staging.mybinder.org
        to: staging.mybinder.org
    - type: host
      host:
        from: docs.staging.mybinder.org
        to: mybinder.readthedocs.io
    - type: host
      host:
        from: playground.staging.mybinder.org
        to: play.nteract.io

matomo:
  enabled: true
  db:
    instanceName: binder-staging:us-central1:matomo
  trustedHosts:
    - staging.mybinder.org
  ingress:
    hosts:
      - staging.mybinder.org

analyticsPublisher:
  project: binder-staging
  destinationBucket: mybinder-staging-events-archive
  events:
    sourceBucket: mybinder-staging-events-raw-export

gcsProxy:
  buckets:
    - name: mybinder-staging-events-archive
      host: archive.analytics.staging.mybinder.org

federationRedirect:
  host: staging.mybinder.org
  enabled: true
  hosts:
    gke:
      url: https://gke.staging.mybinder.org
      weight: 4
      health: https://gke.staging.mybinder.org/health
      versions: https://gke.staging.mybinder.org/versions
    ovh:
      url: https://gke2.staging.mybinder.org
      weight: 0
      health: https://gke2.staging.mybinder.org/health
      versions: https://gke2.staging.mybinder.org/versions
    # unset the gesis and turing entries
    gesis:
      weight: 1
    turing:
      weight: 0

cert-manager:
  webhook:
    enabled: false
  ingressShim:
    defaultIssuerName: "letsencrypt-staging"
    defaultIssuerKind: "Issuer"
    defaultACMEChallengeType: "http01"
