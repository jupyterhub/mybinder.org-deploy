userNodeSelector: &userNodeSelector
  mybinder.org/pool-type: users
coreNodeSelector: &coreNodeSelector
  mybinder.org/pool-type: core

binderhub:
  build:
    nodeSelector: *userNodeSelector
  nodeSelector: *coreNodeSelector

  dind:
    hostLibDir: /mnt/disks/ssd0/dind
    resources:
      requests:
        cpu: "2"
        memory: 1Gi
      limits:
        cpu: "5"
        memory: 12Gi

  ingress:
    hosts:
      - mybinder.org

  resources:
    requests:
      cpu: "0.25"
      memory: 1Gi
    limits:
      cpu: "2"
      memory: 1Gi

  registry:
    prefix: gcr.io/binder-prod/r2d-aee37be-

  hub:

    url: https://hub.mybinder.org

  jupyterhub:
    singleuser:
      nodeSelector: *userNodeSelector
      memory:
        guarantee: 450M
        limit: 2G
      cpu:
        guarantee: 0.01
        limit: 1
    hub:
      nodeSelector: *coreNodeSelector
      resources:
        requests:
          cpu: "0.25"
          memory: 1Gi
        limits:
          cpu: "2"
          memory: 1Gi

    proxy:
      nodeSelector: *coreNodeSelector
      chp:
        resources:
          requests:
            memory: 256Mi
            cpu: "0.1"
          limits:
            memory: 256Mi
            cpu: "0.5"
      nginx:
        resources:
          requests:
            memory: 512Mi
            cpu: "0.25"
          limits:
            memory: 512Mi
            cpu: 1
    ingress:
      hosts:
        - hub.mybinder.org
      tls:
        - secretName: kubelego-tls-jupyterhub-prod
          hosts:
            - hub.mybinder.org
    scheduling:
      userScheduler:
        nodeSelector: *coreNodeSelector

  googleAnalyticsCode: "UA-101904940-1"
  googleAnalyticsDomain: "mybinder.org"

grafana:
  nodeSelector: *coreNodeSelector
  resources:
    requests:
      cpu: "0"
      memory: 128Mi
    limits:
      cpu: "0.25"
      memory: 128Mi
  ingress:
    hosts:
      - grafana.mybinder.org
    tls:
      - hosts:
          - grafana.mybinder.org
        secretName: kubelego-tls-grafana
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: prometheus
          orgId: 1
          type: prometheus
          url: https://prometheus.mybinder.org
          access: direct
          isDefault: true
          editable: false

kube-lego:
  nodeSelector: *coreNodeSelector

prometheus:
  server:
    nodeSelector: *coreNodeSelector
    resources:
      requests:
        cpu: "2"
        memory: 12Gi
      limits:
        cpu: "2"
        memory: 12Gi
    persistentVolume:
      # Use a large SSD Volume in production
      size: 2000Gi
      storageClass: ssd
    retention: 60d
    ingress:
      hosts:
        - prometheus.mybinder.org
      tls:
        - hosts:
            - prometheus.mybinder.org
          secretName: kubelego-tls-prometheus

nginx-ingress:
  nodeSelector: *coreNodeSelector
  controller:
    service:
      loadBalancerIP: 35.202.202.188
    replicaCount: 2

static:
  ingress:
    hosts:
      - static.mybinder.org

proxyPatches:
  nodeSelector: *coreNodeSelector

redirector:
  nodeSelector: *coreNodeSelector
  redirects:
    - type: host
      host:
        from: beta.mybinder.org
        to: mybinder.org
    - type: host
      host:
        from: docs.mybinder.org
        to: mybinder.readthedocs.io
    - type: host
      host:
        from: z2jh.jupyter.org
        to: zero-to-jupyterhub.readthedocs.io
    # - type: host
    #   host:
    #     from: playground.mybinder.org
    #     to: play.nteract.io

matomo:
  replicas: 3
  nodeSelector: *coreNodeSelector
  db:
    instanceName: binder-prod:us-central1:matomo
  trustedHosts:
    - mybinder.org
  ingress:
    hosts:
      - mybinder.org
  resources:
    requests:
      cpu: 0.1
      memory: 256Mi
    limits:
      cpu: 1
      memory: 1Gi
