projectName: hetzner-2i2c-bare

registry:
  enabled: true
  replicas: 1
  config:
    storage:
      # Uncomment this and comment out the s3 config to use filesystem
      filesystem:
        rootdirectory: /var/lib/registry
      # s3:
      #   regionendpoint: https://nbg1.your-objectstorage.com
      #   bucket: mybinder-2i2c-registry
      #   region: does-not-matter
  storage:
    filesystem:
      enabled: true
      size: 300Gi
      storageClassName: "openebs-hostpath"
  ingress:
    hosts:
      - registry.2i2c-bare.mybinder.org

cryptnono:
  detectors:
    monero:
      enabled: false
    execwhacker:
      containerdHostPath: /run/k3s/containerd/containerd.sock

binderhub:
  imageCleaner:
    # handled by buildkit pruner
    enabled: false
  config:
    BinderHub:
      hub_url: https://hub.2i2c-bare.mybinder.org
      badge_base_url: https://mybinder.org
      image_prefix: registry.2i2c-bare.mybinder.org/i-
      # image_prefix: quay.io/mybinder-hetzner-2i2c/image-
      # build_docker_host: /var/run/dind/docker.sock
    KubernetesBuildExecutor:
      docker_host: /var/run/dind/docker.sock
      repo2docker_extra_args:
        # try to avoid timeout pushing to local registry
        # default is 60
        # this must have no spaces to be processed by repo2docker correctly
        - '--DockerEngine.extra_init_args={"timeout":1200}'

    LaunchQuota:
      total_quota: 64

    # DockerRegistry:
    # token_url: "https://2lmrrh8f.gra7.container-registry.ovh.net/service/token?service=harbor-registry"

  dockerApi:
    resources:
      requests:
        cpu: "4"
        memory: 12Gi
      limits:
        cpu: "8"
        memory: 16Gi

  ingress:
    hosts:
      - 2i2c-bare.mybinder.org
    tls:
      - hosts: [2i2c-bare.mybinder.org]
        secretName: https-auto-tls-binder

jupyterhub:
  hub:
    db:
      pvc:
        storage: 1Gi
        storageClassName: openebs-hostpath
  ingress:
    hosts:
      - hub.2i2c-bare.mybinder.org
    tls:
      - secretName: kubelego-tls-hub
        hosts:
          - hub.2i2c-bare.mybinder.org

grafana:
  ingress:
    hosts:
      - grafana.2i2c-bare.mybinder.org
    tls:
      - hosts:
          - grafana.2i2c-bare.mybinder.org
        secretName: kubelego-tls-grafana
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: prometheus
          orgId: 1
          type: prometheus
          url: https://prometheus.2i2c-bare.mybinder.org
          access: direct
          isDefault: true
          editable: false
  persistence:
    storageClassName: openebs-hostpath

prometheus:
  server:
    persistentVolume:
      size: 50Gi
      storageClass: openebs-hostpath
    ingress:
      hosts:
        - prometheus.2i2c-bare.mybinder.org
      tls:
        - hosts:
            - prometheus.2i2c-bare.mybinder.org
          secretName: kubelego-tls-prometheus

ingress-nginx:
  controller:
    replicas: 1
    scope:
      enabled: true
    service:
      loadBalancerIP:

static:
  ingress:
    hosts:
      - static.2i2c-bare.mybinder.org
    tls:
      secretName: kubelego-tls-static

localpv-provisioner:
  enabled: true

  hostpathClass:
    reclaimPolicy: Retain

    xfsQuota:
      enabled: true

  analytics:
    enabled: false
